version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/storageos/go-cli
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - run: go vet $(go list ./... | grep -v /vendor/) | tee ${TEST_RESULTS}/go-vet.out
      - run: go test -v -race -run Test[^Mkdir] $(go list ./... | grep -v /vendor/) | tee ${TEST_RESULTS}/go-test.out
      - run: go get github.com/mitchellh/gox
      - run: make release
      - store_artifacts:
          path: /go/src/github.com/storageos/go-cli/cmd/storageos/release/
          destination: binaries
      - store_test_results:
          path: /tmp/test-results

  release:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/storageos/go-cli
    environment:
      TEST_RESULTS: /tmp/test-results    
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - run: go vet $(go list ./... | grep -v /vendor/) | tee ${TEST_RESULTS}/go-vet.out
      - run: go test -v -race -run Test[^Mkdir] $(go list ./... | grep -v /vendor/) | tee ${TEST_RESULTS}/go-test.out
      - run: go get github.com/mitchellh/gox github.com/tcnksm/ghr
      - run: make release
      - store_artifacts:
          path: /go/src/github.com/storageos/go-cli/cmd/storageos/release/
          destination: binaries
      - store_test_results:
          path: /tmp/test-results
      - run: ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace `git describe --tags` cmd/storageos/release/
      
workflows:
  version: 2
  update:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
